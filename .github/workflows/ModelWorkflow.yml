name: Wine Quality Prediction Model Workflow
on: 
  push:
    branches:
      - dev
      - stage
      - main

jobs:
  dev:
    if: github.ref == 'refs/heads/dev'
    runs-on: ubuntu-latest
    env: 
      MLFLOW_TRACKING_URI: "databricks"
      DATABRICKS_HOST: ${{ secrets.DATABRICKS_HOST_DEV }} #Workspace level host
      DATABRICKS_TOKEN: ${{ secrets.DATABRICKS_TOKEN_DEV }}
      CATALOG: "workspace_dev"
      SCHEMA: "wine_quality_data"
      TRAIN_FILE_PATH: "/Workspace_dev/Users/sagarbansal719@gmail.com/Wine_Quality_Prediction_Model/notebooks/train_model_py.py"
      INFERENCE_FILE_PATH: "/Workspace_dev/Users/sagarbansal719@gmail.com/Wine_Quality_Prediction_Model/notebooks/train_model_py.py"
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"
      
      - name: Install databricks CLI
        run: |
         curl -fsSL https://raw.githubusercontent.com/databricks/setup-cli/main/install.sh | sh
      
      - name: Verify Databricks CLI Installation
        run: |
          databricks --version

      - name: Install dependencies
        run: |
          pip install pyspark
          pip install -r requirements.txt

      - name: Run CLI Tool using Databricks credentials
        run: |
          export PYTHONPATH=cli_tool
          python cli_tool/cli.py deploy

      - name: Set PYTHONPATH and Run Tests
        run: |
          export PYTHONPATH=notebooks  # Set PYTHONPATH to the src directory
          pytest tests  # Run tests located in the tests directory
 #          pip install --upgrade pip setuptools wheel 
  stage:
    if: github.ref == 'refs/heads/stage'
    runs-on: ubuntu-latest
    env: 
      MLFLOW_TRACKING_URI: "databricks"
      DATABRICKS_HOST: ${{ secrets.DATABRICKS_HOST_STAGE }} #Workspace level host. 
      DATABRICKS_TOKEN: ${{ secrets.DATABRICKS_TOKEN_STAGE }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"
      
      - name: Install databricks CLI
        run: |
         curl -fsSL https://raw.githubusercontent.com/databricks/setup-cli/main/install.sh | sh
      
      - name: Verify Databricks CLI Installation
        run: |
          databricks --version

      - name: Install dependencies
        run: |
          pip install -r requirements.txt

      - name: Run CLI Tool using Databricks credentials
        run: |
          export PYTHONPATH=cli_tool
          python cli_tool/cli.py deploy

      - name: Set PYTHONPATH and Run Tests
        run: |
          export PYTHONPATH=notebooks  # Set PYTHONPATH to the src directory
          pytest tests  # Run tests located in the tests directory

  main:
    runs-on: ubuntu-latest
    env: 
      MLFLOW_TRACKING_URI: "databricks"
      DATABRICKS_HOST: ${{ secrets.DATABRICKS_HOST_PROD }} #Workspace level host
      DATABRICKS_TOKEN: ${{ secrets.DATABRICKS_TOKEN_PROD }}
    if: github.ref == 'refs/heads/main' # This will only run on main branch

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"
      
      - name: Install databricks CLI
        run: |
         curl -fsSL https://raw.githubusercontent.com/databricks/setup-cli/main/install.sh | sh
      
      - name: Verify Databricks CLI Installation
        run: |
          databricks --version

      - name: Install dependencies
        run: |
          pip install -r requirements.txt

      - name: Run CLI Tool using Databricks credentials
        run: |
          export PYTHONPATH=cli_tool
          python cli_tool/cli.py deploy

      - name: Set PYTHONPATH and Run Tests
        run: |
          export PYTHONPATH=notebooks  # Set PYTHONPATH to the src directory
          pytest tests  # Run tests located in the tests directory



      